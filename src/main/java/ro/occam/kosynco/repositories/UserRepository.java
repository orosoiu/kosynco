package ro.occam.kosynco.repositories;

import io.micronaut.data.annotation.Query;
import io.micronaut.data.jdbc.annotation.JdbcRepository;
import io.micronaut.data.model.query.builder.sql.Dialect;
import io.micronaut.data.repository.CrudRepository;
import ro.occam.kosynco.entities.User;

import java.util.Optional;

@JdbcRepository(dialect = Dialect.ANSI)
public interface UserRepository extends CrudRepository<User, String> {

    /**
     * Returns a user identified by username or an empty Optional if no user found
     */
    Optional<User> find(String username);

    /**
     * Return true if the user identified by username exists, false otherwise
     * Note: the code autogenerated by Micronaut does not work with SQLite, so we need to use a custom query
     */
    @Query(value = "SELECT EXISTS(SELECT 1 FROM user WHERE username = :username)")
    boolean exists(String username);
}
